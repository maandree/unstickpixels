#!/usr/bin/env python
##
# unstickpixels – screen loop to try to unstick dead pixels
# 
# Copyright © 2013, 2015  Mattias Andrée (maandree@member.fsf.org)
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
##

import sys
import time
from subprocess import Popen, PIPE


def print(text, end = '\n'):
    sys.stdout.buffer.write((text + end).encode('utf-8'))
    sys.stdout.buffer.flush()


sleep = 0 if len(sys.argv) < 2 else int(sys.argv[1])


(height, width) = Popen(['stty', 'size'], stdout=PIPE).communicate()[0].decode('utf-8', 'replace').split(' ')
(height, width) = (int(height), int(width))
COPYING = ['unstickpixels – screen loop to try to unstick dead pixels',
           '',
           'Copyright © 2013, 2015  Mattias Andrée (maandree@member.fsf.org)',
           '',
           'This program is free software: you can redistribute it and/or modify',
           'it under the terms of the GNU General Public License as published by',
           'the Free Software Foundation, either version 3 of the License, or',
           '(at your option) any later version.',
           '',
           'This program is distributed in the hope that it will be useful,',
           'but WITHOUT ANY WARRANTY; without even the implied warranty of',
           'MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the',
           'GNU General Public License for more details.',
           '',
           'You should have received a copy of the GNU General Public License',
           'along with this program.  If not, see <http://www.gnu.org/licenses/>.']

print('\033[?25l\033[H\033[2J\033[%i;%iH%s' % (height - len(COPYING) + 1, 1, '\n'.join(COPYING)), '')
print('\033[H\033[01;31mWARNING: Do not used this if you have epilepsia.\033[00m')
print('')
print('It is recommended to massage the defective dots, whilst')
print('running this program.')
print('')
print('Press C-c to quit, and Enter to start (C-c will quit).')
print('')
print('')
print('You should not have to run this program. If the manufacture or')
print('reseller of your monitor refuse to replace or repair the monitor')
print('that was broken, because of manufacturing error, when it was')
print('chiped to you, please consider yelling at the support, threaten')
print('to report the personally because of involvement in organised')
print('crime (not replacing hardware that was chipped broken when you')
print('selled it is a crime, and they do this in an organised fashion')
print('to make money), call their executive director persistently at')
print('inconvenient times, report them applicable board for consumer')
print('disputes/complaints or equivalent agency. If this program does')
print('not help, and the manufacture is Packard Bell, or its')
print('supersidiary Acer, tell them that you have tried a program')
print('that was prompted by the complete suckness and incapability')
print('to repair defects that they have agreed to repair. They suck!')

started = False
try:
    input()
    started = True
    print('\033[H', '')
    if sleep == 0:
        while True:
            sys.stdout.buffer.write('\033]P0FF0000\033[2J'.encode('utf-8'))
            sys.stdout.buffer.flush()
            sys.stdout.buffer.write('\033]P000FF00\033[2J'.encode('utf-8'))
            sys.stdout.buffer.flush()
            sys.stdout.buffer.write('\033]P00000FF\033[2J'.encode('utf-8'))
            sys.stdout.buffer.flush()
    else:
        sleep /= 1000
        while True:
            sys.stdout.buffer.write('\033]P0FF0000\033[2J'.encode('utf-8'))
            sys.stdout.buffer.flush()
            time.sleep(sleep)
            sys.stdout.buffer.write('\033]P000FF00\033[2J'.encode('utf-8'))
            sys.stdout.buffer.flush()
            time.sleep(sleep)
            sys.stdout.buffer.write('\033]P00000FF\033[2J'.encode('utf-8'))
            sys.stdout.buffer.flush()
            time.sleep(sleep)
except:
    pass
if started:
    print('\033]P0000000', '')
print('\033[?25h\033[H\033[2J', '')

